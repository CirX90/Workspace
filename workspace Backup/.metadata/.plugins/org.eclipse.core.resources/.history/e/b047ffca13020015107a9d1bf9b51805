package aufgabenblatt4_2;

public class Zug {

	private Lokomotive lok;

	public Zug() {
		this.lok = lok;
	}

	// null möglicherweise definieren
	// Fügt einen Wagen in diesen Zug ein.
	public void wagenHinzufuegen(Wagen neuWagen) {
		neuWagen.setNaechsterWagen(lok.getErsterWagen());
		lok.setErsterWagen(neuWagen);
	}

	// Hängt den ersten Wagen aus diesem Zug aus und liefert ihn zurück.
	public Wagen erstenWagenEntfernen() {
		Wagen ersterWagen = lok.getErsterWagen();
		if (ersterWagen != null) {
			lok.setErsterWagen(ersterWagen.getNaechsterWagen());
		}
		return ersterWagen;
	}

	// Hängt alle Wagen des anderen Zuges in diesen Zug ein. Der andere Zug hat
	// dann keine Wagen mehr.
	public void zugAnhaengen(Zug andererZug) {
		if (this != andererZug) {
			while (andererZug.lok.getErsterWagen() != null) {
				wagenHinzufuegen(andererZug.erstenWagenEntfernen());
			}
		}
	}

	// Anzahl an erstellen Wagen wird zurückgegeben.
	public int getWagenAnzahl() {
		int anzahl = 0;
		Wagen wagen = lok.getErsterWagen();
		while (wagen != null) {
			anzahl++;
			wagen = wagen.getNaechsterWagen();
		}
		return anzahl;
	}
	
	// Passagierkapazitaet der Wagen wird addiert und zurückgegeben.
	public int getKapazitaet() {
		int kapazitaet = 0;
		Wagen wagen = lok.getErsterWagen();

		while (wagen != null) {
			kapazitaet += wagen.getKapazitaet();
			wagen = wagen.getNaechsterWagen();
		}
		return kapazitaet;
	}
	
	// Länge von Lok und allen Wagen addiert und ausgegeben.
	public int getLaenge() {
		int laenge = lok.getLokLaenge();
		Wagen wagen = lok.getErsterWagen();

		while (wagen != null) {
			laenge += wagen.getLaenge();
			wagen = wagen.getNaechsterWagen();
		}
		
		return laenge;
	}
	
	public String info() {
		
	}
}