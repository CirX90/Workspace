/**
 * Praktikum TI-PM2, SS 2015
 * Gruppe: Tom-Henrik Hertel (tom-henrik.hertel@haw-hamburg.de)
 * 		   Milan Hering 	 (milan.hering@haw-hamburg.de)
 * Aufgabe: Aufgabenblatt 4, Aufgabe 1
 * Verwendete Quellen: Vorlesungsfolien
 */

package aufgabenblatt4_1;

import java.util.Scanner;

public class Tamagotchi {

	// Deklarieren der Startwerte, Scanner erstellen
	// Zustände beginnen bei - damit das Spiel mit 0 Punkten startet
	private int hunger = -1;
	private int langeweile = -1;
	private int muedigkeit = -1;
	private int punkte = -3;

	Scanner scanner = new Scanner(System.in);

	// Werte jede Runde um +1 erhöhen
	public void tick() {

		hunger++;
		langeweile++;
		muedigkeit++;

	}

	// Methoden
	public void schlaf() {

		muedigkeit = 0;
		hunger++;
		langeweile = 0;
	}

	public void spiel() {

		langeweile = 0;
		hunger++;
		muedigkeit++;
	}

	public void iss() {

		hunger = 0;
		langeweile++;

	}

	public void nichts() {

	}

	// exit beendet das Programm
	public void ende() {

		scanner.close();
		System.out.println("Schade! Bis zum nächsten Mal!");
		System.exit(0);

	}

	// Spiel wird mit -Punkten verloren
	public void verlieren(int punkte) {

		if (punkte < 0) {
			System.out.println("\nLeider hast du das Spiel verloren!\n");
			ende();
		}

	}

	// Stringeingabe über Scanner für die Tamagotchi-kommandos
	// Rückgabe Kommandos
	private String getNextKommando() {

		System.out.println("Bitte gib einen Befehl ein!");
		String kommando = scanner.nextLine();
		return kommando;

	}

	// Strings werden verglichen und entsprechende Methode ausgeführt
	public void verarbeiteKommando(String kommando) {

		if (kommando.equals("iss")) {
			iss();
		} else if (kommando.equals("schlaf")) {
			schlaf();
		} else if (kommando.equals("spiel")) {
			spiel();
		} else if (kommando.equals("nichts")) {
			nichts();
		} else if (kommando.equals("ende")) {
			ende();
		} else {
			System.out.println("Ich habe deinen Befehl leider "
					+ "nicht verstanden. \nBitte wiederhole den Befehl! \n"
					+ "Deine Möglichkeiten sind iss, schlaf, spiel, nichts"
					+ " oder ende.");
		}

	}

	// Getter für Punkte und Rückgabe dieser
	public int getPunktestand() {
		punkte = hunger >= 4 ? punkte - 2 : punkte + 1;
		punkte = muedigkeit >= 4 ? punkte - 2 : punkte + 1;
		punkte = langeweile >= 4 ? punkte - 2 : punkte + 1;
		return punkte;
	}

	// Verarbeitung des Punktestandes
	public int printPunktestand(int punkte) {

		System.out.println("Aktueller Hungerzustand: " + hunger + "\n"
				+ "Aktueller Langeweilezustand: " + langeweile + "\n"
				+ "Aktueller Müdigkeitszustand: " + muedigkeit + "\n"
				+ "Aktueller Punktestand: " + punkte);

		if (hunger >= 4) {
			System.out.println("Mir geht es nicht gut! Ich bin hungrig!");
		} else if (langeweile >= 4) {
			System.out.println("Mir geht es nicht gut! Mir ist langweilig!");
		} else if (muedigkeit >= 4) {
			System.out.println("Mir geht es nicht gut! Ich bin müde!");
		} else {
			System.out.println("Mir geht es sehr gut. Ich danke dir!");
		}

		return punkte;
	}

	// Main-Methode, Tamagotchis werden erstellt
	// Game-Loop
	public static void main(String[] args) {

		Tamagotchi tama = new Tamagotchi();

		System.out.println("Hallo ich bin ein Tamagochi. \nDu kannst "
				+ "mir Befehle geben, "
				+ "wenn du willst, dass es mir gut geht. \n"
				+ "Diese lauten: iss, spiel, schlaf oder nichts. \n"
				+ "Mit ende beendest du dieses Spiel.\n");

		while (true) {
			tama.tick();
			tama.verlieren(tama.printPunktestand(tama.getPunktestand()));
			tama.verarbeiteKommando(tama.getNextKommando());
			System.out.println();

		}

	}

}